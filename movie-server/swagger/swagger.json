{
    "swagger": "2.0",
    "info": {
      "title": "Movie Backend APIs",
      "description": "This is Movie Backend APIs.",
      "version": "1.0.0"
    },
    "basePath":"/",
    "schemes": [
      "http"
    ],
    "securityDefinitions":{
      "bearerAuth":{
        "type":"apiKey",
        "name":"Authorization",
        "scheme":"Bearer",
        "in":"header",
        "description": "For accessing the API a valid JWT token must be passed in all the queries in the 'Authorization' header"
      }

    },
    "paths": {
      "/api/v1/users/login":{
          "post": {
            "tags": ["users"],
            "security":{
              "Bearer":[
                
              ]
            }
            
            
            ,
            "summary": "for login new user",
            "description": "This endpoint uses post request to create  new  user login",
            "produces": ["application/json"],
            "parameters": [
              {
                "in": "body",
                "name": "body",
                "description": "Created user object",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/AuthLogin"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Succesful operation"
              }
            }
      }},
      "/api/v1/users/register":{
            "post": {
              "tags": ["users"],
              "security":{
                "Bearer":[
                  
                ]
              }
              
              
              ,
              "summary": "Create new user",
              "description": "This endpoint uses post request to create  new user",
              "produces": ["application/json"],
              "parameters": [
                {
                  "in": "body",
                  "name": "body",
                  "description": "Created user object",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/AuthRegister"
                  }
                }
              ],
              "responses": {
                "201": {
                  "description": "Succesful operation"
                },
                "400": {
                  "description": "Invalid Data  supplied"
                },
                "404": {
                    "description": "data not found"
                }
              }
      }},
      "/api/v1/movie": {
          "get": {
            "tags": [
              "movie"
            ],
            "consumes":"application/json",
            "produces":"application/json",
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "summary": "Get list of movie",
            "operationId": "getUsers",
            "parameters": [
              {
                "name": "limit",
                "in": "query",
                "description": "Number of results to return per page.",
                "required": false,
                "type": "integer",
                "items": {
                  "type": "integer"
                },
                "collectionFormat": "csv"
              },
              {
                  "name": "offset",
                  "in": "query",
                  "description": "The initial index from which to return the results.",
                  "required": false,
                  "type": "integer",
                  "items": {
                    "type": "integer"
                  },
                  "collectionFormat": "csv"
              },
              {
                "name": "sort",
                "in": "query",
                "description": "add any field.",
                "required": false,
                "type": "string",
                "items": {
                  "type": "string"
                },
                "collectionFormat": "csv"
              }
            ],
            "responses": {
              "200": {
                "description": "Succesful operation"
              },
              "400": {
                "description": "Invalid Data  supplied"
              }
            }
          },
          "post": {
            "tags": [
              "movie"
            ],
            "consumes":"application/json",
            "produces":"application/json",
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "summary": "Create a movie",
            "operationId": "create movie",
            "parameters": [
              {
                "name": "data",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/createMovieTypePost"
                }
              }
            ],
            "responses": {
              "201": {
                "description": "movie creation"
              },
              "500": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
      },
      "/api/v1/movie/{movie_id}": {
          "get": {
            "tags": [
              "movie"
            ],
            "consumes":"application/json",
            "produces":"application/json",
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "summary": "Get movie by id",
            "operationId": "get movie by id",
            "parameters": [
              {
                "name": "movie_id",
                "in": "path",
                "description": "A unique integer value identifying this movie.",
                "required": true,
                "type": "string"
              },
              {
                "name": "limit",
                "in": "query",
                "description": "Number of results to return per page.",
                "required": false,
                "type": "integer"
              },
              {
                  "name": "offset",
                  "in": "query",
                  "description": "The initial index from which to return the results.",
                  "required": false,
                  "type": "integer"
              }
              
            ],
            "responses": {
              "200": {
                "description": "Succesful operation"
              }
            }
          },
          "patch": {
            "tags": [
              "movie"
            ],
            "consumes":"application/json",
            "produces":"application/json",
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "summary": "update movie by id",
            "operationId": "update movie by id",
            "parameters": [
              {
                "name": "data",
                "in": "body",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/createMovieTypePost"
                }
              },
              {
                  "name": "movie_id",
                  "in": "path",
                  "description": "A unique integer value identifying movie.",
                  "required": true,
                  "type": "string"
              }
            ],
            "responses": {
              "400": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          },
          "delete": {
            "tags": [
              "movie"
            ],
            "consumes":"application/json",
            "produces":"application/json",
            "security":[
              {
                "bearerAuth":[]
              }
            ],
            "summary": "delete movie by id",
            "operationId": "delete movie by id",
            "parameters": [
              {
                  "name": "movie_id",
                  "in": "path",
                  "description": "A unique integer value identifying this movie.",
                  "required": true,
                  "type": "string"
              }
            ],
            "responses": {
              "500": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
      },
      "/api/v1/movie/restore/{movie_id}": {
        "patch": {
          "tags": [
            "movie"
          ],
          "consumes":"application/json",
          "produces":"application/json",
          "security":[
            {
              "bearerAuth":[]
            }
          ],
          "summary": "restore movie by id",
          "operationId": "restore movie by id",
          "parameters": [
            {
                "name": "movie_id",
                "in": "path",
                "description": "A unique integer value identifying movie.",
                "required": true,
                "type": "string"
            }
          ],
          "responses": {
            "400": {
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/api/v1/rent": {
        "get": {
          "tags": [
            "rent"
          ],
          "consumes":"application/json",
          "produces":"application/json",
          "security":[
            {
              "bearerAuth":[]
            }
          ],
          "summary": "Get list of rent",
          "operationId": "getUsers",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results to return per page.",
              "required": false,
              "type": "integer",
              "items": {
                "type": "integer"
              },
              "collectionFormat": "csv"
            },
            {
                "name": "offset",
                "in": "query",
                "description": "The initial index from which to return the results.",
                "required": false,
                "type": "integer",
                "items": {
                  "type": "integer"
                },
                "collectionFormat": "csv"
            },
            {
              "name": "sort",
              "in": "query",
              "description": "add any field.",
              "required": false,
              "type": "string",
              "items": {
                "type": "string"
              },
              "collectionFormat": "csv"
            }
          ],
          "responses": {
            "200": {
              "description": "Succesful operation"
            },
            "400": {
              "description": "Invalid Data  supplied"
            }
          }
        },
        "post": {
          "tags": [
            "rent"
          ],
          "consumes":"application/json",
          "produces":"application/json",
          "security":[
            {
              "bearerAuth":[]
            }
          ],
          "summary": "Create a rent",
          "operationId": "create rent",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/rentCreatePost"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "rent creation"
            },
            "500": {
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/api/v1/rent/delete": {
        "patch": {
          "tags": [
            "rent"
          ],
          "consumes":"application/json",
          "produces":"application/json",
          "security":[
            {
              "bearerAuth":[]
            }
          ],
          "summary": "delete rent",
          "operationId": "delete rent",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/rentCreatePost"
              }
            }
          ],
          "responses": {
            "500": {
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/api/v1/rent/{user_id}": {
        "get": {
          "tags": [
            "rent action"
          ],
          "consumes":"application/json",
          "produces":"application/json",
          "security":[
            {
              "bearerAuth":[]
            }
          ],
          "summary": "Get rent by id",
          "operationId": "get rent by id",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "description": "A unique integer value identifying this movie.",
              "required": true,
              "type": "string"
            }
            
          ],
          "responses": {
            "200": {
              "description": "Succesful operation"
            }
          }
        }
      },
      "/api/v1/rent/action": {
        "patch": {
          "tags": [
            "rent action"
          ],
          "consumes":"application/json",
          "produces":"application/json",
          "security":[
            {
              "bearerAuth":[]
            }
          ],
          "summary": "rent action",
          "operationId": "rent action",
          "parameters": [
            {
              "name": "data",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/rentActionPost"
              }
            }
          ],
          "responses": {
            "500": {
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "responses":{
      "NotFound":{
        "description":"The specified resource was not found"
      }
    },
    "definitions": { 
      "AuthRegister":{
        "type":"object",
        "properties":{
          "name":{"type":"string"},
          "email":{"type":"string"},
          "password":{"type":"string"}
          
      }},
      "AuthLogin":{
            "type":"object",
            "properties":{
            "email":{"type":"string"},
            "password":{"type":"string"}
          }},
          "Register":{
        "type":"object",
        "properties":{
        "id":{"type":"number"},
        "username":{"type":"string"},
        "password":{"type":"string"},
        "userid":{"type":"number"}
        }
      },
      "Login":{
        "type":"object",
        "properties":{
        "username":{"type":"string"},
        "password":{"type":"string"}
        }
      },  
      "createMovieTypePost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "stock": {
            "type": "integer"
          },
          "rate": {
            "type": "integer"
          }
        }
      },
      "rentCreatePost": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "movie": {
            "type": "string"
          }
        }
      },
      "rentActionPost": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "movie": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "action_value" : {
            "type": "boolean"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Deleted": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "UnauthorizedError":{
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        }
      }
    }
  }